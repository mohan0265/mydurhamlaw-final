-- Verified authoritative syllabus
create table if not exists syllabus_years (
  id bigint generated by default as identity primary key,
  year_number int not null check (year_number between 1 and 4),
  label text not null
);
create table if not exists syllabus_terms (
  id bigint generated by default as identity primary key,
  year_number int not null references syllabus_years(year_number) on delete cascade,
  slug text not null,
  name text not null,
  start_date date not null,
  end_date date not null,
  unique(year_number, slug)
);
create table if not exists syllabus_weeks (
  id bigint generated by default as identity primary key,
  year_number int not null,
  term_slug text not null,
  week_no int not null,
  start_date date not null,
  end_date date not null,
  unique(year_number, term_slug, week_no),
  foreign key (year_number, term_slug) references syllabus_terms(year_number, slug) on delete cascade
);
create table if not exists syllabus_modules (
  id bigint generated by default as identity primary key,
  code text not null,
  name text not null,
  unique(code)
);
create table if not exists syllabus_topics (
  id bigint generated by default as identity primary key,
  year_number int not null,
  term_slug text not null,
  week_no int not null,
  module_code text not null references syllabus_modules(code) on delete restrict,
  day text not null check (day in ('Mon','Tue','Wed','Thu','Fri')),
  title text not null,
  order_idx int default 0,
  ref_slug text,
  foreign key (year_number, term_slug, week_no) references syllabus_weeks(year_number, term_slug, week_no) on delete cascade
);

-- Student overrides (clearly labeled student-provided)
create table if not exists user_syllabus_overrides (
  id bigint generated by default as identity primary key,
  user_id uuid not null references auth.users(id) on delete cascade,
  year_number int not null,
  term_slug text not null,
  week_no int not null,
  module_code text not null,
  day text not null check (day in ('Mon','Tue','Wed','Thu','Fri')),
  title text not null,
  notes text,
  created_at timestamptz default now(),
  unique(user_id, year_number, term_slug, week_no, module_code, day, title)
);

-- RLS (simple starter policy)
alter table user_syllabus_overrides enable row level security;
create policy if not exists "users manage own overrides"
on user_syllabus_overrides for all
using (auth.uid() = user_id) with check (auth.uid() = user_id);

-- Optional helper view to read merged rows later (authoritative + overrides remain separate for clarity)